<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="jakarta.validation.Valid"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.model.dto.UserDTOInput"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.model.dto.UserDTOOutPut"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.OpenAPI"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.media.Schema"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.info.Info"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.tags.Tag"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.Operation"/>
    <fullyQualifiedTypeName name="com.example.demo.controller.swagger.UserControllerSwagger"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.exception.BusinessException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="java.net.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.MethodArgumentNotValidException"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.exception.UserNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="com.rabbitmq.client.ConnectionFactory"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.rabbit.core.RabbitTemplate"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="org.springframework.mail.javamail.JavaMailSender"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="jakarta.mail.internet.MimeMessage"/>
    <fullyQualifiedTypeName name="org.springframework.mail.javamail.MimeMessageHelper"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.core.Binding"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.rabbit.connection.ConnectionFactory"/>
    <fullyQualifiedTypeName name="com.rabbitmq.client.AMQP.Queue"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.core.Queue"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.model.dto.UserDTOOutput"/>
    <fullyQualifiedTypeName name="org.springframework.messaging.handler.annotation.Payload"/>
    <fullyQualifiedTypeName name="org.springframework.amqp.rabbit.annotation.RabbitListener"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.model.dto.PhraseDTO"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="chucknorris.ChuckNorrisIoClient"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.model.Email"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.service.EmailService"/>
    <fullyQualifiedTypeName name="jakarta.mail.MessagingException"/>
    <fullyQualifiedTypeName name="freemarker.template.Template"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.exception.MailException"/>
    <fullyQualifiedTypeName name="freemarker.template.Configuration"/>
    <fullyQualifiedTypeName name="com.example.demo.core.EmailProperties"/>
    <fullyQualifiedTypeName name="com.example.demo.domain.service.EmailService.Message"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="lombok.Value"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
</qualifiedTypeNameHistroy>
